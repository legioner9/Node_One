const mongoose = require('mongoose');
const conf = require('_/config');
let linc_db = {};
const options_connect_mdb = {
    useUnifiedTopology: true,

    useNewUrlParser: true,
    useCreateIndex: true,
    useFindAndModify: false,
    autoIndex: true, // (Don't) It's build indexes
    reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect
    reconnectInterval: 500, // Reconnect every 500ms
    poolSize: 10, // Maintain up to 10 socket connections
    // If not connected, return errors immediately rather than waiting for reconnect
    bufferMaxEntries: 0,
    connectTimeoutMS: 10000, // Give up initial connection after 10 seconds
    socketTimeoutMS: 45000, // Close sockets after 45 seconds of inactivity
    family: 4 // Use IPv4, skip trying IPv6
};

console.log('DB started)))');
// mongoose.Promise = global.Promise;
/*linc_db.connect_mdb = mongoose.connect(conf.MongoUrl_1, options_connect_mdb)
    .then(() => console.log('MongoBD is Started'))
    .catch(e => console.log(e));*/

linc_db.promise_mdb = () => {
    return new Promise((resolve, reject) => {
        mongoose.Promise = global.Promise;
        mongoose.set('debug', true);

        mongoose.connection
            .on('error', error => reject(error))
            .on('close', () => console.log('Database connection closed.'))
            .once('open', () => resolve(mongoose.connections[0]));

        mongoose.connect(conf.MongoUrl_1, options_connect_mdb);
    });
};
// linc_db.promise_mdb().then(()=>console.log('Yess')).catch(e=>console.log(e));
module.exports = linc_db;
